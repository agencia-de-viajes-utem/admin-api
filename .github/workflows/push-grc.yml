name: Push image to Cloud Registry

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  GCP_VERBOSITY: warning
  GCR_IMAGE: gcr-alpine
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER }}    # Add your cluster name here.
  GKE_ZONE: ${{ secrets.GKE_ZONE }}   # Add your cluster zone here.
  #IMAGE_TAG: ${{ github.sha }}
  IMAGE_TAG: ${{ github.ref_name }}

jobs:
  push-to-GCR:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2.3.4

    - name: Authenticate with Google Cloud
      uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}

    - name: Create Google Cloud credentials file
      run: |
        echo "${{ secrets.GCP_SA_KEY }}" > credentials.json
      working-directory: ${{ github.workspace }}

    - name: Create .env file
      run: |
        echo "${{ secrets.ENV_GO_BACK }}" > .env
      working-directory: ${{ github.workspace }}

    # Get the GKE credentials so we can deploy to the cluster
    - name: Get GKE credentials
      uses: google-github-actions/get-gke-credentials@db150f2cc60d1716e61922b832eae71d2a45938f
      with:
        cluster_name: ${{ env.GKE_CLUSTER }}
        location: ${{ env.GKE_ZONE }}
        credentials: ${{ secrets.GKE_SA_KEY }}

    - name: Configure Docker to use the gcloud command-line tool as a credential helper for authentication
      run: |-
        gcloud --quiet auth configure-docker

    -- name: Build the alpine-based docker image
      run: |-
        docker build . --file Dockerfile -t "gcr.io/${{ secrets.GCP_PROJECT }}/$GCR_IMAGE:$GITHUB_SHA"

    - name: Push docker image to GCR
      run: |-
        docker push "gcr.io/${{ env.PROJECT_ID }}/$GCR_IMAGE:$GITHUB_SHA"

    - name: Describe pushed GCR image
      run: |-
        gcloud container images describe "gcr.io/${{ env.PROJECT_ID }}/$GCR_IMAGE:$GITHUB_SHA" --verbosity=$GCP_VERBOSITY --project=${{ env.PROJECT_ID }} --quiet
        grep "digest: sha256:" <<< $(gcloud container images describe "gcr.io/${{ env.PROJECT_ID }}/$GCR_IMAGE:$GITHUB_SHA" --verbosity=$GCP_VERBOSITY --project=${{ env.PROJECT_ID }} --quiet)

    - name: deploy to gke
      env:
        GOOGLE_PROJECT: ${{ secrets.GCP_PROJECT }}
      run: |
        sed -i "s/GOOGLE_PROJECT/$GCP_PROJECT/g" deploy/k8s/ingress.yaml
        kubectl apply -f deploy/k8s/ingress.yaml

    - name: Debug kubectl configurations
      run: kubectl config view

    - name: Deploy
      run: |
        sed -i "s~{IMAGE_TAG}~${{ env.GCR_IMAGE }}~" deploy/k8s/deployment.yaml
        sed -i "s~{GITHUB_SHA}~${{ github.sha }}~" deploy/k8s/deployment.yaml
        cd deploy/k8s/
        kubectl apply -f deployment.yaml

    - name: Start Service
      run: |-
        cd deploy/k8s
        kubectl apply -f service.yaml  # Aplicar la configuraciÃ³n del servicio
